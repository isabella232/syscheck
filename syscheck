#!/bin/bash

OUTPUT="output"

test_blake2sum() {
	echo "blake2sum test"
	cd src/blake2sum
	./blake2sum > ../../$OUTPUT/blake2sum
	cd ../..
}

test_rkhunter () {
	echo "Checking rkhunter, please wait..."
	rkhunter --check --cronjob --disable properties,ipc_shared_mem,malware --report-warnings-only > $OUTPUT/rkhunter
}

test_chkrootkit () {
	echo "Checking chkrootkit, please wait..."
	cd src/chkrootkit-0.55
	./chkrootkit 2>/dev/null  | grep -v '!' > ../../$OUTPUT/chkrootkit
	cd ../..
}

test_pkgmgr_integrity () {
	echo "Verifying files (md5sum) installed by apt/dpkg. This will take a few minutes..."
	dpkg --verify | tee $OUTPUT/pkgmgr-file-integrity
}



# create database and output directories
mkdir -p $OUTPUT

ARG_PKGMGR="yes"
ARG_ROOTKIT="yes"
while [ $# -gt 0 ]; do    # Until you run out of parameters . . .
    case "$1" in
    --no-pkgmgr)
        ARG_PKGMGR="no"
        ;;
    --no-rootkits)
        ARG_ROOTKITS="no"
        ;;
    --help)
        echo "Usage: sudo syscheck.sh [--no-pkgmgr] [--no-rootkits]"
        exit 0
        ;;
    esac
    shift       # Check next set of parameters.
done

if [ "$(whoami)" != "root" ]; then
        echo "Script must be run as user: root"
        exit 1
fi

# package manager test
if [ $ARG_PKGMGR = "yes" ]; then
	test_pkgmgr_integrity
fi

test_blake2sum

# rootkit tests
if [ $ARG_PKGMGR = "yes" ]; then
	test_rkhunter
	test_chkrootkit
fi

# closing down
echo "All done! Test results as follow:"
echo "******************************"
git status -s
echo "******************************"




